import{S as wu,i as Pu,s as Au,k as t,a as u,q as r,L as Su,l as e,h as s,c as k,m as p,r as i,n as o,M as xu,E as n,b as c,F as Ic}from"../chunks/index.ba8c4f3a.js";function Cu(Hi){let b,Ps,pt,w,P,pn,np,ot,h,tp,Ta,ep,pp,La,op,lp,Ia,cp,rp,lt,d,ip,ja,up,kp,qa,fp,mp,Da,dp,hp,Ra,yp,ct,A,S,on,vp,rt,As,Ep,it,Ha,Mi='<code class="language-bash"><span class="token function">pnpm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> stripe svelte-stripe</code>',ut,x,Ss,Ma,_p,bp,wp,xs,Oa,Pp,Ap,kt,C,T,ln,Sp,ft,L,I,cn,xp,mt,Cs,Cp,dt,Na,Oi=`<code class="language-bash"><span class="token assign-left variable">PUBLIC_STRIPE_KEY</span><span class="token operator">=</span>pk_test_<span class="token punctuation">..</span>.
<span class="token assign-left variable">SECRET_STRIPE_KEY</span><span class="token operator">=</span>sk_test_<span class="token punctuation">..</span>.</code>`,ht,j,Tp,rn,Lp,Ip,yt,ga,Ni=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> loadStripe <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@stripe/stripe-js'</span>
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Elements <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-stripe'</span>
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> onMount <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte'</span>
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> <span class="token constant">PUBLIC_STRIPE_KEY</span> <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'$env/static/public'</span>

  <span class="token keyword">let</span> stripe <span class="token operator">=</span> <span class="token keyword">null</span>

  <span class="token function">onMount</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    stripe <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">loadStripe</span><span class="token punctuation">(</span><span class="token constant">PUBLIC_STRIPE_KEY</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Elements</span> <span class="token attr-name">&#123;stripe&#125;</span><span class="token punctuation">></span></span>
  <span class="token comment">&lt;!-- this is where your Stripe components go --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Elements</span><span class="token punctuation">></span></span></code>`,vt,q,D,un,jp,Et,R,qp,Ka,Dp,Rp,_t,H,Hp,kn,Mp,Op,bt,Wa,gi=`<code class="language-javascript"><span class="token keyword">import</span> Stripe <span class="token keyword">from</span> <span class="token string">'stripe'</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> <span class="token constant">SECRET_STRIPE_KEY</span> <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'$env/static/private'</span>

<span class="token comment">// initialize Stripe</span>
<span class="token keyword">const</span> stripe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stripe</span><span class="token punctuation">(</span><span class="token constant">SECRET_STRIPE_KEY</span><span class="token punctuation">)</span>

<span class="token comment">// handle POST /create-payment-intent</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">POST</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// create the payment intent</span>
  <span class="token keyword">const</span> paymentIntent <span class="token operator">=</span> <span class="token keyword">await</span> stripe<span class="token punctuation">.</span>paymentIntents<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
    <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
    <span class="token comment">// note, for some EU-only payment methods it must be EUR</span>
    <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">'usd'</span><span class="token punctuation">,</span>
    <span class="token comment">// specify what payment methods are allowed</span>
    <span class="token comment">// can be card, sepa_debit, ideal, etc...</span>
    <span class="token literal-property property">payment_method_types</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'card'</span><span class="token punctuation">]</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  <span class="token comment">// return the clientSecret to the client</span>
  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token literal-property property">clientSecret</span><span class="token operator">:</span> paymentIntent<span class="token punctuation">.</span>client_secret
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,wt,M,O,fn,Np,Pt,Ts,gp,At,N,g,mn,Kp,St,Ls,Wp,xt,K,Gp,dn,Bp,Up,Ct,Ga,Ki=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">on:</span>submit|preventDefault</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;submit&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Elements</span> <span class="token attr-name">&#123;stripe&#125;</span> <span class="token attr-name">&#123;clientSecret&#125;</span> <span class="token attr-name"><span class="token namespace">bind:</span>elements</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PaymentElement</span> <span class="token attr-name">options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;...&#125;</span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Elements</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Pay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code>`,Tt,W,Yp,hn,$p,zp,Lt,Ba,Wi=`<code class="language-javascript"><span class="token keyword">const</span> paymentIntent <span class="token operator">=</span> <span class="token keyword">await</span> stripe<span class="token punctuation">.</span>paymentIntents<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
  <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">'eur'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">automatic_payment_methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,It,Ua,Fp,Ya,yn,Jp,jt,$a,Gi=`<code class="language-javascript"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> stripe<span class="token punctuation">.</span><span class="token function">confirmPayment</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
  elements<span class="token punctuation">,</span>
  <span class="token comment">// specify redirect: 'if_required' or a &#96;return_url&#96;</span>
  <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">'if_required'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,qt,G,za,Qp,Vp,Is,Xp,Dt,B,U,vn,Zp,Rt,Y,ao,Fa,so,no,Ht,js,to,Mt,$,eo,En,po,oo,Ot,Ja,Bi=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">on:</span>submit|preventDefault</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;submit&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Elements</span> <span class="token attr-name">&#123;stripe&#125;</span> <span class="token attr-name">&#123;clientSecret&#125;</span> <span class="token attr-name"><span class="token namespace">bind:</span>elements</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinkAuthenticationElement</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PaymentElement</span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Elements</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Pay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code>`,Nt,z,Qa,lo,co,qs,ro,gt,F,J,_n,io,Kt,y,uo,bn,ko,fo,wn,mo,ho,Pn,yo,vo,Wt,Va,Ui=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Elements</span> <span class="token attr-name">&#123;stripe&#125;</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">on:</span>submit|preventDefault</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;submit&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardNumber</span> <span class="token attr-name"><span class="token namespace">bind:</span>element</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;cardElement&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardExpiry</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CardCvc</span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Pay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Elements</span><span class="token punctuation">></span></span></code>`,Gt,v,Eo,An,_o,bo,Xa,Sn,wo,Po,Bt,Za,Yi=`<code class="language-javascript"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> stripe
  <span class="token punctuation">.</span><span class="token function">confirmCardPayment</span><span class="token punctuation">(</span>clientSecret<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">payment_method</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token literal-property property">card</span><span class="token operator">:</span> cardElement<span class="token punctuation">,</span>
      <span class="token literal-property property">billing_details</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token operator">...</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,Ut,Q,as,Ao,So,Ds,xo,Yt,V,X,xn,Co,$t,Z,To,Cn,Lo,Io,zt,ss,$i=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Elements</span> <span class="token attr-name">&#123;stripe&#125;</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PaymentRequestButton</span> <span class="token attr-name">&#123;paymentRequest&#125;</span> <span class="token attr-name"><span class="token namespace">on:</span>paymentmethod</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;pay&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Elements</span><span class="token punctuation">></span></span></code>`,Ft,aa,jo,Tn,qo,Do,Jt,ns,zi=`<code class="language-javascript"><span class="token comment">// declare payment metadata (amounts must match payment intent)</span>
<span class="token keyword">const</span> paymentRequest <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">'US'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">currency</span><span class="token operator">:</span> <span class="token string">'usd'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'Demo total'</span><span class="token punctuation">,</span> <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">1099</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">requestPayerName</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">requestPayerEmail</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">&#125;</span></code>`,Qt,sa,Ro,Ln,Ho,Mo,Vt,ts,Fi=`<code class="language-javascript"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">pay</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> paymentMethod <span class="token operator">=</span> e<span class="token punctuation">.</span>detail<span class="token punctuation">.</span>paymentMethod

  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">await</span> stripe<span class="token punctuation">.</span><span class="token function">confirmCardPayment</span><span class="token punctuation">(</span>clientSecret<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">payment_method</span><span class="token operator">:</span> paymentMethod<span class="token punctuation">.</span>id
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// mark failed</span>
    e<span class="token punctuation">.</span>detail<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token string">'fail'</span><span class="token punctuation">)</span>

    <span class="token comment">// payment failed, notify user</span>
    error <span class="token operator">=</span> result<span class="token punctuation">.</span>error
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// mark succeeded</span>
    e<span class="token punctuation">.</span>detail<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token string">'success'</span><span class="token punctuation">)</span>

    <span class="token comment">// payment succeeded, redirect to "thank you" page</span>
    <span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">'/thanks'</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,Xt,na,es,Oo,No,Rs,go,Zt,ta,ea,In,Ko,ae,pa,Wo,jn,Go,Bo,se,ps,Ji=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Elements</span> <span class="token attr-name">&#123;stripe&#125;</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">on:</span>submit|preventDefault</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;submit&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;name&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

    <span class="token comment">&lt;!-- customize the list of countries, or use "SEPA" to allow all supported countries --></span>
    &lt;Iban supportedCountries=&#123;['SEPA']&#125; bind:element=&#123;ibanElement&#125;/>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Pay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Elements</span><span class="token punctuation">></span></span></code>`,ne,oa,Uo,os,qn,Yo,$o,te,ls,Qi=`<code class="language-javascript"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> stripe<span class="token punctuation">.</span><span class="token function">confirmSepaDebitPayment</span><span class="token punctuation">(</span>clientSecret<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">payment_method</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">sepa_debit</span><span class="token operator">:</span> ibanElement<span class="token punctuation">,</span>
    <span class="token literal-property property">billing_details</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      name<span class="token punctuation">,</span>
      email
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,ee,la,cs,zo,Fo,Hs,Jo,pe,ca,ra,Dn,Qo,oe,ia,Vo,Rn,Xo,Zo,le,rs,Vi=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Elements</span> <span class="token attr-name">&#123;stripe&#125;</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name"><span class="token namespace">on:</span>submit|preventDefault</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;submit&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;name&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;email&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>E-mail<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Ideal</span> <span class="token attr-name"><span class="token namespace">bind:</span>element</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;idealElement&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">></span></span>Pay<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Elements</span><span class="token punctuation">></span></span></code>`,ce,E,al,is,Hn,sl,nl,Mn,tl,el,re,us,Xi=`<code class="language-javascript"><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> stripe<span class="token punctuation">.</span><span class="token function">confirmIdealPayment</span><span class="token punctuation">(</span>clientSecret<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">payment_method</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">ideal</span><span class="token operator">:</span> idealElement<span class="token punctuation">,</span>
    <span class="token literal-property property">billing_details</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      name<span class="token punctuation">,</span>
      email
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">return_url</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>origin<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/return</span><span class="token template-punctuation string">&#96;</span></span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,ie,ua,ks,pl,ol,Ms,ll,ue,ka,fa,On,cl,ke,Os,rl,fe,Ns,il,me,ma,ul,Nn,kl,fl,de,fs,Zi=`<code class="language-javascript"><span class="token comment">// in src/routes/stripe/webhooks/+server.js</span>
<span class="token keyword">import</span> Stripe <span class="token keyword">from</span> <span class="token string">'stripe'</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> error<span class="token punctuation">,</span> json <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@sveltejs/kit'</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> env <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'$env/dynamic/private'</span>

<span class="token comment">// init api client</span>
<span class="token keyword">const</span> stripe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stripe</span><span class="token punctuation">(</span>env<span class="token punctuation">.</span><span class="token constant">SECRET_STRIPE_KEY</span><span class="token punctuation">)</span>

<span class="token comment">// endpoint to handle incoming webhooks</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token constant">POST</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> request <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// extract body</span>
  <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment">// get the signature from the header</span>
  <span class="token keyword">const</span> signature <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'stripe-signature'</span><span class="token punctuation">)</span>

  <span class="token comment">// var to hold event data</span>
  <span class="token keyword">let</span> event

  <span class="token comment">// verify it</span>
  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>
    event <span class="token operator">=</span> stripe<span class="token punctuation">.</span>webhooks<span class="token punctuation">.</span><span class="token function">constructEvent</span><span class="token punctuation">(</span>body<span class="token punctuation">,</span> signature<span class="token punctuation">,</span> env<span class="token punctuation">.</span><span class="token constant">STRIPE_WEBHOOK_SECRET</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// signature is invalid!</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">'⚠️  Webhook signature verification failed.'</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>message<span class="token punctuation">)</span>

    <span class="token comment">// return, because it's a bad request</span>
    <span class="token keyword">throw</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token string">'Invalid request'</span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>

  <span class="token comment">// signature has been verified, so we can process events</span>
  <span class="token comment">// full list of events: https://stripe.com/docs/api/events/list</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">'charge.succeeded'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">// get data object</span>
    <span class="token keyword">const</span> charge <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">.</span>object

    <span class="token comment">// TODO: fulfill the order here</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">✅ Charge succeeded </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>charge<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span>

  <span class="token comment">// return a 200 with an empty JSON response</span>
  <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`,he,gs,ms,ml,ye,da,dl,ds,hl,yl,ve,hs,au='<code class="language-bash">stripe listen --forward-to localhost:5173/stripe/webhooks</code>',Ee,ha,vl,ys,El,_l,_e,ya,va,gn,bl,be,Ea,wl,Kn,Pl,Al,we,vs,su=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Elements</span>
  <span class="token attr-name">theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>flat<span class="token punctuation">"</span></span>
  <span class="token attr-name">labels</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floating<span class="token punctuation">"</span></span>
  <span class="token attr-name">variables</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;&#123;</span> <span class="token attr-name"><span class="token namespace">colorPrimary:</span></span> <span class="token attr-name">'pink'</span> <span class="token attr-name">&#125;&#125;</span>
  <span class="token attr-name">rules</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>&#123;...&#125;</span>
  <span class="token punctuation">/></span></span></code>`,Pe,_a,Sl,Es,xl,Cl,Ae,ba,wa,Wn,Tl,Se,Pa,Ll,_s,Il,jl,xe,f,Gn,Ks,ql,Dl,Bn,Ws,Rl,Hl,Un,Gs,Ml,Ol,Yn,Bs,Nl,gl,$n,Us,Kl,Wl,zn,Ys,Gl,Bl,Fn,$s,Ul,Yl,Jn,zs,$l,zl,Qn,Fs,Fl,Jl,Vn,Js,Ql,Vl,Xn,Qs,Xl,Zl,Zn,Vs,ac,sc,at,Xs,nc,tc,st,Zs,ec,pc,nt,an,oc,lc,tt,sn,cc,Ce,Aa,Sa,et,rc,Te,nn,ic,Le,bs,ws,jc;return{c(){b=t("meta"),Ps=t("meta"),pt=u(),w=t("h1"),P=t("a"),pn=t("span"),np=r("svelte-stripe"),ot=u(),h=t("p"),tp=r("Everything you need to add "),Ta=t("a"),ep=r("Stripe Elements"),pp=r(" to your "),La=t("a"),op=r("Svelte"),lp=r(" & "),Ia=t("a"),cp=r("SvelteKit"),rp=r(" projects."),lt=u(),d=t("p"),ip=r(`Links:
`),ja=t("a"),up=r("npm"),kp=u(),qa=t("a"),fp=r("github"),mp=u(),Da=t("a"),dp=r("changelog"),hp=u(),Ra=t("a"),yp=r("license"),ct=u(),A=t("h2"),S=t("a"),on=t("span"),vp=r("Installation"),rt=u(),As=t("p"),Ep=r("To configure your project, add these 2 packages:"),it=u(),Ha=t("pre"),ut=u(),x=t("ul"),Ss=t("li"),Ma=t("a"),_p=r("stripe"),bp=r(" is the official server-side version of Stripe."),wp=u(),xs=t("li"),Oa=t("a"),Pp=r("svelte-stripe"),Ap=r(" is the community-supported wrapper for Stripe Elements."),kt=u(),C=t("h2"),T=t("a"),ln=t("span"),Sp=r("Docs"),ft=u(),L=t("h3"),I=t("a"),cn=t("span"),xp=r("Set up Stripe"),mt=u(),Cs=t("p"),Cp=r("Add your private and public keys to your environment:"),dt=u(),Na=t("pre"),ht=u(),j=t("p"),Tp=r("In your payment page, initialize Stripe and add a "),rn=t("code"),Lp=r("<Elements>"),Ip=r(" component:"),yt=u(),ga=t("pre"),vt=u(),q=t("h3"),D=t("a"),un=t("span"),jp=r("Creating a payment intent"),Et=u(),R=t("p"),qp=r("Before making a charge, Stripe should be notified by creating a "),Ka=t("a"),Dp=r("payment intent"),Rp=r(". It’s a way to tell Stripe what amount to capture and to attach any relavent metadata, for example, the products they are buying. This must happen server-side to avoid anyone tampering with the amount."),_t=u(),H=t("p"),Hp=r("Let’s add an endpoint "),kn=t("code"),Mp=r("src/routes/create-payment-intent/+server.js"),Op=r(" to create the “payment intent”:"),bt=u(),Wa=t("pre"),wt=u(),M=t("h3"),O=t("a"),fn=t("span"),Np=r("Accepting payments"),Pt=u(),Ts=t("p"),gp=r("There are several types of payment you can accept:"),At=u(),N=t("h4"),g=t("a"),mn=t("span"),Kp=r("Payment Element"),St=u(),Ls=t("p"),Wp=r("An all-in-one component that supports credit cards, SEPA, GooglePay and ApplePay."),xt=u(),K=t("p"),Gp=r("To use it, drop a "),dn=t("code"),Bp=r("<PaymentElement>"),Up=r(" component in your form:"),Ct=u(),Ga=t("pre"),Tt=u(),W=t("p"),Yp=r("Then when creating the payment intent, enable the "),hn=t("code"),$p=r("automatic_payment_methods:"),zp=r(" option:"),Lt=u(),Ba=t("pre"),It=u(),Ua=t("p"),Fp=r("Once the form is submitted, call "),Ya=t("a"),yn=t("code"),Jp=r("stripe.confirmPayment()"),jt=u(),$a=t("pre"),qt=u(),G=t("p"),za=t("a"),Qp=r("code"),Vp=u(),Is=t("a"),Xp=r("demo"),Dt=u(),B=t("h4"),U=t("a"),vn=t("span"),Zp=r("Link Authentication"),Rt=u(),Y=t("p"),ao=r("With "),Fa=t("a"),so=r("Link"),no=r(", customer’s don’t have to re-enter payment and address details for each purchase. Their details are retreived based on their e-mail address."),Ht=u(),js=t("p"),to=r("Once they enter their e-mail they receive an SMS code to verify their identity."),Mt=u(),$=t("p"),eo=r("It works in conjuction with "),En=t("code"),po=r("<PaymentElement>"),oo=r(":"),Ot=u(),Ja=t("pre"),Nt=u(),z=t("p"),Qa=t("a"),lo=r("code"),co=u(),qs=t("a"),ro=r("demo"),gt=u(),F=t("h4"),J=t("a"),_n=t("span"),io=r("Credit Cards"),Kt=u(),y=t("p"),uo=r("These use the "),bn=t("code"),ko=r("<CardNumber>"),fo=r(", "),wn=t("code"),mo=r("<CardExpiry>"),ho=r(" and "),Pn=t("code"),yo=r("<CardCvc>"),vo=r(" components:"),Wt=u(),Va=t("pre"),Gt=u(),v=t("p"),Eo=r("When the form submits, pass the "),An=t("code"),_o=r("cardElement"),bo=r(" to "),Xa=t("a"),Sn=t("code"),wo=r("stripe.confirmCardPayment()"),Po=r(", ie:"),Bt=u(),Za=t("pre"),Ut=u(),Q=t("p"),as=t("a"),Ao=r("code"),So=u(),Ds=t("a"),xo=r("demo"),Yt=u(),V=t("h4"),X=t("a"),xn=t("span"),Co=r("GooglePay & ApplePay"),$t=u(),Z=t("p"),To=r("To display a GooglePay or ApplePay button, use the "),Cn=t("code"),Lo=r("<PaymentRequestButton/>"),Io=r("."),zt=u(),ss=t("pre"),Ft=u(),aa=t("p"),jo=r("It requires that you pass metadata using the "),Tn=t("code"),qo=r("paymentRequest"),Do=r(" prop:"),Jt=u(),ns=t("pre"),Qt=u(),sa=t("p"),Ro=r("And define an event handler for the "),Ln=t("code"),Ho=r("on:paymentmethod"),Mo=r(" event:"),Vt=u(),ts=t("pre"),Xt=u(),na=t("p"),es=t("a"),Oo=r("code"),No=u(),Rs=t("a"),go=r("demo"),Zt=u(),ta=t("h4"),ea=t("a"),In=t("span"),Ko=r("SEPA"),ae=u(),pa=t("p"),Wo=r("To process SEPA debits, use the "),jn=t("code"),Go=r("<Iban>"),Bo=r(" component:"),se=u(),ps=t("pre"),ne=u(),oa=t("p"),Uo=r("To process the payment use "),os=t("a"),qn=t("code"),Yo=r("stripe.confirmSepaDebitPayment()"),$o=r(":"),te=u(),ls=t("pre"),ee=u(),la=t("p"),cs=t("a"),zo=r("code"),Fo=u(),Hs=t("a"),Jo=r("demo"),pe=u(),ca=t("h4"),ra=t("a"),Dn=t("span"),Qo=r("iDEAL"),oe=u(),ia=t("p"),Vo=r("To accept iDEAL payments, use the "),Rn=t("code"),Xo=r("<Ideal>"),Zo=r(" component:"),le=u(),rs=t("pre"),ce=u(),E=t("p"),al=r("To complete the payment call "),is=t("a"),Hn=t("code"),sl=r("stripe.confirmIdealPayment()"),nl=r(", and make sure the pass a "),Mn=t("code"),tl=r("return_url"),el=r(":"),re=u(),us=t("pre"),ie=u(),ua=t("p"),ks=t("a"),pl=r("code"),ol=u(),Ms=t("a"),ll=r("demo"),ue=u(),ka=t("h3"),fa=t("a"),On=t("span"),cl=r("Webhooks"),ke=u(),Os=t("p"),rl=r("After the payment succeeds or fails, Stripe will send out a webhook, which can be used to provision or fulfill the purchase."),fe=u(),Ns=t("p"),il=r("The webhook payload contains a signature that should be verified to ensure the data originated from Stripe."),me=u(),ma=t("p"),ul=r("Here’s an example of handling a "),Nn=t("code"),kl=r("charge.succeeded"),fl=r(" webhook with SvelteKit:"),de=u(),fs=t("pre"),he=u(),gs=t("p"),ms=t("a"),ml=r("code"),ye=u(),da=t("p"),dl=r("In development mode, webhooks can be routed to your dev machine using "),ds=t("a"),hl=r("Stripe’s CLI"),yl=r(". Example:"),ve=u(),hs=t("pre"),Ee=u(),ha=t("p"),vl=r("For more information on webhooks, see "),ys=t("a"),El=r("Stripe’s Webhook Docs"),_l=r("."),_e=u(),ya=t("h2"),va=t("a"),gn=t("span"),bl=r("Styling"),be=u(),Ea=t("p"),wl=r("Components can be styled by setting attributes on the "),Kn=t("code"),Pl=r("<Elements/>"),Al=r(" container."),we=u(),vs=t("pre"),Pe=u(),_a=t("p"),Sl=r("See "),Es=t("a"),xl=r("appearance docs"),Cl=r(" for more examples."),Ae=u(),ba=t("h2"),wa=t("a"),Wn=t("span"),Tl=r("Examples"),Se=u(),Pa=t("p"),Ll=r("All demos are running in test-mode, any of Stripe’s "),_s=t("a"),Il=r("test card numbers"),jl=r(" will work."),xe=u(),f=t("ul"),Gn=t("li"),Ks=t("a"),ql=r("Payment Element"),Dl=u(),Bn=t("li"),Ws=t("a"),Rl=r("Express Checkout"),Hl=u(),Un=t("li"),Gs=t("a"),Ml=r("Embedded Checkout"),Ol=u(),Yn=t("li"),Bs=t("a"),Nl=r("Credit Card"),gl=u(),$n=t("li"),Us=t("a"),Kl=r("Apple Pay"),Wl=u(),zn=t("li"),Ys=t("a"),Gl=r("Google Pay"),Bl=u(),Fn=t("li"),$s=t("a"),Ul=r("Microsoft Pay"),Yl=u(),Jn=t("li"),zs=t("a"),$l=r("SEPA"),zl=u(),Qn=t("li"),Fs=t("a"),Fl=r("iDEAL"),Jl=u(),Vn=t("li"),Js=t("a"),Ql=r("Alipay"),Vl=u(),Xn=t("li"),Qs=t("a"),Xl=r("WeChat Pay"),Zl=u(),Zn=t("li"),Vs=t("a"),ac=r("Konbini"),sc=u(),at=t("li"),Xs=t("a"),nc=r("Klarna"),tc=u(),st=t("li"),Zs=t("a"),ec=r("Sofort"),pc=u(),nt=t("li"),an=t("a"),oc=r("Afterpay/Clearpay"),lc=u(),tt=t("li"),sn=t("a"),cc=r("PaymentMethodMessaging"),Ce=u(),Aa=t("h2"),Sa=t("a"),et=t("span"),rc=r("Sponsors"),Te=u(),nn=t("p"),ic=r("This project is made possible by:"),Le=u(),bs=t("a"),ws=t("img"),this.h()},l(a){const l=Su("svelte-ayl114",document.head);b=e(l,"META",{name:!0,content:!0}),Ps=e(l,"META",{name:!0,content:!0}),l.forEach(s),pt=k(a),w=e(a,"H1",{id:!0});var uc=p(w);P=e(uc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var qc=p(P);pn=e(qc,"SPAN",{class:!0}),p(pn).forEach(s),qc.forEach(s),np=i(uc,"svelte-stripe"),uc.forEach(s),ot=k(a),h=e(a,"P",{});var xa=p(h);tp=i(xa,"Everything you need to add "),Ta=e(xa,"A",{href:!0,rel:!0});var Dc=p(Ta);ep=i(Dc,"Stripe Elements"),Dc.forEach(s),pp=i(xa," to your "),La=e(xa,"A",{href:!0,rel:!0});var Rc=p(La);op=i(Rc,"Svelte"),Rc.forEach(s),lp=i(xa," & "),Ia=e(xa,"A",{href:!0,rel:!0});var Hc=p(Ia);cp=i(Hc,"SvelteKit"),Hc.forEach(s),rp=i(xa," projects."),xa.forEach(s),lt=k(a),d=e(a,"P",{});var _=p(d);ip=i(_,`Links:
`),ja=e(_,"A",{href:!0,rel:!0});var Mc=p(ja);up=i(Mc,"npm"),Mc.forEach(s),kp=k(_),qa=e(_,"A",{href:!0,rel:!0});var Oc=p(qa);fp=i(Oc,"github"),Oc.forEach(s),mp=k(_),Da=e(_,"A",{href:!0,rel:!0});var Nc=p(Da);dp=i(Nc,"changelog"),Nc.forEach(s),hp=k(_),Ra=e(_,"A",{href:!0,rel:!0});var gc=p(Ra);yp=i(gc,"license"),gc.forEach(s),_.forEach(s),ct=k(a),A=e(a,"H2",{id:!0});var kc=p(A);S=e(kc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Kc=p(S);on=e(Kc,"SPAN",{class:!0}),p(on).forEach(s),Kc.forEach(s),vp=i(kc,"Installation"),kc.forEach(s),rt=k(a),As=e(a,"P",{});var Wc=p(As);Ep=i(Wc,"To configure your project, add these 2 packages:"),Wc.forEach(s),it=k(a),Ha=e(a,"PRE",{class:!0});var nu=p(Ha);nu.forEach(s),ut=k(a),x=e(a,"UL",{});var Ie=p(x);Ss=e(Ie,"LI",{});var fc=p(Ss);Ma=e(fc,"A",{href:!0,rel:!0});var Gc=p(Ma);_p=i(Gc,"stripe"),Gc.forEach(s),bp=i(fc," is the official server-side version of Stripe."),fc.forEach(s),wp=k(Ie),xs=e(Ie,"LI",{});var mc=p(xs);Oa=e(mc,"A",{href:!0,rel:!0});var Bc=p(Oa);Pp=i(Bc,"svelte-stripe"),Bc.forEach(s),Ap=i(mc," is the community-supported wrapper for Stripe Elements."),mc.forEach(s),Ie.forEach(s),kt=k(a),C=e(a,"H2",{id:!0});var dc=p(C);T=e(dc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Uc=p(T);ln=e(Uc,"SPAN",{class:!0}),p(ln).forEach(s),Uc.forEach(s),Sp=i(dc,"Docs"),dc.forEach(s),ft=k(a),L=e(a,"H3",{id:!0});var hc=p(L);I=e(hc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Yc=p(I);cn=e(Yc,"SPAN",{class:!0}),p(cn).forEach(s),Yc.forEach(s),xp=i(hc,"Set up Stripe"),hc.forEach(s),mt=k(a),Cs=e(a,"P",{});var $c=p(Cs);Cp=i($c,"Add your private and public keys to your environment:"),$c.forEach(s),dt=k(a),Na=e(a,"PRE",{class:!0});var tu=p(Na);tu.forEach(s),ht=k(a),j=e(a,"P",{});var je=p(j);Tp=i(je,"In your payment page, initialize Stripe and add a "),rn=e(je,"CODE",{});var zc=p(rn);Lp=i(zc,"<Elements>"),zc.forEach(s),Ip=i(je," component:"),je.forEach(s),yt=k(a),ga=e(a,"PRE",{class:!0});var eu=p(ga);eu.forEach(s),vt=k(a),q=e(a,"H3",{id:!0});var yc=p(q);D=e(yc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Fc=p(D);un=e(Fc,"SPAN",{class:!0}),p(un).forEach(s),Fc.forEach(s),jp=i(yc,"Creating a payment intent"),yc.forEach(s),Et=k(a),R=e(a,"P",{});var qe=p(R);qp=i(qe,"Before making a charge, Stripe should be notified by creating a "),Ka=e(qe,"A",{href:!0,rel:!0});var Jc=p(Ka);Dp=i(Jc,"payment intent"),Jc.forEach(s),Rp=i(qe,". It’s a way to tell Stripe what amount to capture and to attach any relavent metadata, for example, the products they are buying. This must happen server-side to avoid anyone tampering with the amount."),qe.forEach(s),_t=k(a),H=e(a,"P",{});var De=p(H);Hp=i(De,"Let’s add an endpoint "),kn=e(De,"CODE",{});var Qc=p(kn);Mp=i(Qc,"src/routes/create-payment-intent/+server.js"),Qc.forEach(s),Op=i(De," to create the “payment intent”:"),De.forEach(s),bt=k(a),Wa=e(a,"PRE",{class:!0});var pu=p(Wa);pu.forEach(s),wt=k(a),M=e(a,"H3",{id:!0});var vc=p(M);O=e(vc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Vc=p(O);fn=e(Vc,"SPAN",{class:!0}),p(fn).forEach(s),Vc.forEach(s),Np=i(vc,"Accepting payments"),vc.forEach(s),Pt=k(a),Ts=e(a,"P",{});var Xc=p(Ts);gp=i(Xc,"There are several types of payment you can accept:"),Xc.forEach(s),At=k(a),N=e(a,"H4",{id:!0});var Ec=p(N);g=e(Ec,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Zc=p(g);mn=e(Zc,"SPAN",{class:!0}),p(mn).forEach(s),Zc.forEach(s),Kp=i(Ec,"Payment Element"),Ec.forEach(s),St=k(a),Ls=e(a,"P",{});var ar=p(Ls);Wp=i(ar,"An all-in-one component that supports credit cards, SEPA, GooglePay and ApplePay."),ar.forEach(s),xt=k(a),K=e(a,"P",{});var Re=p(K);Gp=i(Re,"To use it, drop a "),dn=e(Re,"CODE",{});var sr=p(dn);Bp=i(sr,"<PaymentElement>"),sr.forEach(s),Up=i(Re," component in your form:"),Re.forEach(s),Ct=k(a),Ga=e(a,"PRE",{class:!0});var ou=p(Ga);ou.forEach(s),Tt=k(a),W=e(a,"P",{});var He=p(W);Yp=i(He,"Then when creating the payment intent, enable the "),hn=e(He,"CODE",{});var nr=p(hn);$p=i(nr,"automatic_payment_methods:"),nr.forEach(s),zp=i(He," option:"),He.forEach(s),Lt=k(a),Ba=e(a,"PRE",{class:!0});var lu=p(Ba);lu.forEach(s),It=k(a),Ua=e(a,"P",{});var _c=p(Ua);Fp=i(_c,"Once the form is submitted, call "),Ya=e(_c,"A",{href:!0,rel:!0});var tr=p(Ya);yn=e(tr,"CODE",{});var er=p(yn);Jp=i(er,"stripe.confirmPayment()"),er.forEach(s),tr.forEach(s),_c.forEach(s),jt=k(a),$a=e(a,"PRE",{class:!0});var cu=p($a);cu.forEach(s),qt=k(a),G=e(a,"P",{});var Me=p(G);za=e(Me,"A",{href:!0,rel:!0});var pr=p(za);Qp=i(pr,"code"),pr.forEach(s),Vp=k(Me),Is=e(Me,"A",{href:!0});var or=p(Is);Xp=i(or,"demo"),or.forEach(s),Me.forEach(s),Dt=k(a),B=e(a,"H4",{id:!0});var bc=p(B);U=e(bc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var lr=p(U);vn=e(lr,"SPAN",{class:!0}),p(vn).forEach(s),lr.forEach(s),Zp=i(bc,"Link Authentication"),bc.forEach(s),Rt=k(a),Y=e(a,"P",{});var Oe=p(Y);ao=i(Oe,"With "),Fa=e(Oe,"A",{href:!0,rel:!0});var cr=p(Fa);so=i(cr,"Link"),cr.forEach(s),no=i(Oe,", customer’s don’t have to re-enter payment and address details for each purchase. Their details are retreived based on their e-mail address."),Oe.forEach(s),Ht=k(a),js=e(a,"P",{});var rr=p(js);to=i(rr,"Once they enter their e-mail they receive an SMS code to verify their identity."),rr.forEach(s),Mt=k(a),$=e(a,"P",{});var Ne=p($);eo=i(Ne,"It works in conjuction with "),En=e(Ne,"CODE",{});var ir=p(En);po=i(ir,"<PaymentElement>"),ir.forEach(s),oo=i(Ne,":"),Ne.forEach(s),Ot=k(a),Ja=e(a,"PRE",{class:!0});var ru=p(Ja);ru.forEach(s),Nt=k(a),z=e(a,"P",{});var ge=p(z);Qa=e(ge,"A",{href:!0,rel:!0});var ur=p(Qa);lo=i(ur,"code"),ur.forEach(s),co=k(ge),qs=e(ge,"A",{href:!0});var kr=p(qs);ro=i(kr,"demo"),kr.forEach(s),ge.forEach(s),gt=k(a),F=e(a,"H4",{id:!0});var wc=p(F);J=e(wc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var fr=p(J);_n=e(fr,"SPAN",{class:!0}),p(_n).forEach(s),fr.forEach(s),io=i(wc,"Credit Cards"),wc.forEach(s),Kt=k(a),y=e(a,"P",{});var Ca=p(y);uo=i(Ca,"These use the "),bn=e(Ca,"CODE",{});var mr=p(bn);ko=i(mr,"<CardNumber>"),mr.forEach(s),fo=i(Ca,", "),wn=e(Ca,"CODE",{});var dr=p(wn);mo=i(dr,"<CardExpiry>"),dr.forEach(s),ho=i(Ca," and "),Pn=e(Ca,"CODE",{});var hr=p(Pn);yo=i(hr,"<CardCvc>"),hr.forEach(s),vo=i(Ca," components:"),Ca.forEach(s),Wt=k(a),Va=e(a,"PRE",{class:!0});var iu=p(Va);iu.forEach(s),Gt=k(a),v=e(a,"P",{});var tn=p(v);Eo=i(tn,"When the form submits, pass the "),An=e(tn,"CODE",{});var yr=p(An);_o=i(yr,"cardElement"),yr.forEach(s),bo=i(tn," to "),Xa=e(tn,"A",{href:!0,rel:!0});var vr=p(Xa);Sn=e(vr,"CODE",{});var Er=p(Sn);wo=i(Er,"stripe.confirmCardPayment()"),Er.forEach(s),vr.forEach(s),Po=i(tn,", ie:"),tn.forEach(s),Bt=k(a),Za=e(a,"PRE",{class:!0});var uu=p(Za);uu.forEach(s),Ut=k(a),Q=e(a,"P",{});var Ke=p(Q);as=e(Ke,"A",{href:!0,rel:!0});var _r=p(as);Ao=i(_r,"code"),_r.forEach(s),So=k(Ke),Ds=e(Ke,"A",{href:!0});var br=p(Ds);xo=i(br,"demo"),br.forEach(s),Ke.forEach(s),Yt=k(a),V=e(a,"H4",{id:!0});var Pc=p(V);X=e(Pc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var wr=p(X);xn=e(wr,"SPAN",{class:!0}),p(xn).forEach(s),wr.forEach(s),Co=i(Pc,"GooglePay & ApplePay"),Pc.forEach(s),$t=k(a),Z=e(a,"P",{});var We=p(Z);To=i(We,"To display a GooglePay or ApplePay button, use the "),Cn=e(We,"CODE",{});var Pr=p(Cn);Lo=i(Pr,"<PaymentRequestButton/>"),Pr.forEach(s),Io=i(We,"."),We.forEach(s),zt=k(a),ss=e(a,"PRE",{class:!0});var ku=p(ss);ku.forEach(s),Ft=k(a),aa=e(a,"P",{});var Ge=p(aa);jo=i(Ge,"It requires that you pass metadata using the "),Tn=e(Ge,"CODE",{});var Ar=p(Tn);qo=i(Ar,"paymentRequest"),Ar.forEach(s),Do=i(Ge," prop:"),Ge.forEach(s),Jt=k(a),ns=e(a,"PRE",{class:!0});var fu=p(ns);fu.forEach(s),Qt=k(a),sa=e(a,"P",{});var Be=p(sa);Ro=i(Be,"And define an event handler for the "),Ln=e(Be,"CODE",{});var Sr=p(Ln);Ho=i(Sr,"on:paymentmethod"),Sr.forEach(s),Mo=i(Be," event:"),Be.forEach(s),Vt=k(a),ts=e(a,"PRE",{class:!0});var mu=p(ts);mu.forEach(s),Xt=k(a),na=e(a,"P",{});var Ue=p(na);es=e(Ue,"A",{href:!0,rel:!0});var xr=p(es);Oo=i(xr,"code"),xr.forEach(s),No=k(Ue),Rs=e(Ue,"A",{href:!0});var Cr=p(Rs);go=i(Cr,"demo"),Cr.forEach(s),Ue.forEach(s),Zt=k(a),ta=e(a,"H4",{id:!0});var Ac=p(ta);ea=e(Ac,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Tr=p(ea);In=e(Tr,"SPAN",{class:!0}),p(In).forEach(s),Tr.forEach(s),Ko=i(Ac,"SEPA"),Ac.forEach(s),ae=k(a),pa=e(a,"P",{});var Ye=p(pa);Wo=i(Ye,"To process SEPA debits, use the "),jn=e(Ye,"CODE",{});var Lr=p(jn);Go=i(Lr,"<Iban>"),Lr.forEach(s),Bo=i(Ye," component:"),Ye.forEach(s),se=k(a),ps=e(a,"PRE",{class:!0});var du=p(ps);du.forEach(s),ne=k(a),oa=e(a,"P",{});var $e=p(oa);Uo=i($e,"To process the payment use "),os=e($e,"A",{href:!0,rel:!0});var Ir=p(os);qn=e(Ir,"CODE",{});var jr=p(qn);Yo=i(jr,"stripe.confirmSepaDebitPayment()"),jr.forEach(s),Ir.forEach(s),$o=i($e,":"),$e.forEach(s),te=k(a),ls=e(a,"PRE",{class:!0});var hu=p(ls);hu.forEach(s),ee=k(a),la=e(a,"P",{});var ze=p(la);cs=e(ze,"A",{href:!0,rel:!0});var qr=p(cs);zo=i(qr,"code"),qr.forEach(s),Fo=k(ze),Hs=e(ze,"A",{href:!0});var Dr=p(Hs);Jo=i(Dr,"demo"),Dr.forEach(s),ze.forEach(s),pe=k(a),ca=e(a,"H4",{id:!0});var Sc=p(ca);ra=e(Sc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Rr=p(ra);Dn=e(Rr,"SPAN",{class:!0}),p(Dn).forEach(s),Rr.forEach(s),Qo=i(Sc,"iDEAL"),Sc.forEach(s),oe=k(a),ia=e(a,"P",{});var Fe=p(ia);Vo=i(Fe,"To accept iDEAL payments, use the "),Rn=e(Fe,"CODE",{});var Hr=p(Rn);Xo=i(Hr,"<Ideal>"),Hr.forEach(s),Zo=i(Fe," component:"),Fe.forEach(s),le=k(a),rs=e(a,"PRE",{class:!0});var yu=p(rs);yu.forEach(s),ce=k(a),E=e(a,"P",{});var en=p(E);al=i(en,"To complete the payment call "),is=e(en,"A",{href:!0,rel:!0});var Mr=p(is);Hn=e(Mr,"CODE",{});var Or=p(Hn);sl=i(Or,"stripe.confirmIdealPayment()"),Or.forEach(s),Mr.forEach(s),nl=i(en,", and make sure the pass a "),Mn=e(en,"CODE",{});var Nr=p(Mn);tl=i(Nr,"return_url"),Nr.forEach(s),el=i(en,":"),en.forEach(s),re=k(a),us=e(a,"PRE",{class:!0});var vu=p(us);vu.forEach(s),ie=k(a),ua=e(a,"P",{});var Je=p(ua);ks=e(Je,"A",{href:!0,rel:!0});var gr=p(ks);pl=i(gr,"code"),gr.forEach(s),ol=k(Je),Ms=e(Je,"A",{href:!0});var Kr=p(Ms);ll=i(Kr,"demo"),Kr.forEach(s),Je.forEach(s),ue=k(a),ka=e(a,"H3",{id:!0});var xc=p(ka);fa=e(xc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Wr=p(fa);On=e(Wr,"SPAN",{class:!0}),p(On).forEach(s),Wr.forEach(s),cl=i(xc,"Webhooks"),xc.forEach(s),ke=k(a),Os=e(a,"P",{});var Gr=p(Os);rl=i(Gr,"After the payment succeeds or fails, Stripe will send out a webhook, which can be used to provision or fulfill the purchase."),Gr.forEach(s),fe=k(a),Ns=e(a,"P",{});var Br=p(Ns);il=i(Br,"The webhook payload contains a signature that should be verified to ensure the data originated from Stripe."),Br.forEach(s),me=k(a),ma=e(a,"P",{});var Qe=p(ma);ul=i(Qe,"Here’s an example of handling a "),Nn=e(Qe,"CODE",{});var Ur=p(Nn);kl=i(Ur,"charge.succeeded"),Ur.forEach(s),fl=i(Qe," webhook with SvelteKit:"),Qe.forEach(s),de=k(a),fs=e(a,"PRE",{class:!0});var Eu=p(fs);Eu.forEach(s),he=k(a),gs=e(a,"P",{});var Yr=p(gs);ms=e(Yr,"A",{href:!0,rel:!0});var $r=p(ms);ml=i($r,"code"),$r.forEach(s),Yr.forEach(s),ye=k(a),da=e(a,"P",{});var Ve=p(da);dl=i(Ve,"In development mode, webhooks can be routed to your dev machine using "),ds=e(Ve,"A",{href:!0,rel:!0});var zr=p(ds);hl=i(zr,"Stripe’s CLI"),zr.forEach(s),yl=i(Ve,". Example:"),Ve.forEach(s),ve=k(a),hs=e(a,"PRE",{class:!0});var _u=p(hs);_u.forEach(s),Ee=k(a),ha=e(a,"P",{});var Xe=p(ha);vl=i(Xe,"For more information on webhooks, see "),ys=e(Xe,"A",{href:!0,rel:!0});var Fr=p(ys);El=i(Fr,"Stripe’s Webhook Docs"),Fr.forEach(s),_l=i(Xe,"."),Xe.forEach(s),_e=k(a),ya=e(a,"H2",{id:!0});var Cc=p(ya);va=e(Cc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Jr=p(va);gn=e(Jr,"SPAN",{class:!0}),p(gn).forEach(s),Jr.forEach(s),bl=i(Cc,"Styling"),Cc.forEach(s),be=k(a),Ea=e(a,"P",{});var Ze=p(Ea);wl=i(Ze,"Components can be styled by setting attributes on the "),Kn=e(Ze,"CODE",{});var Qr=p(Kn);Pl=i(Qr,"<Elements/>"),Qr.forEach(s),Al=i(Ze," container."),Ze.forEach(s),we=k(a),vs=e(a,"PRE",{class:!0});var bu=p(vs);bu.forEach(s),Pe=k(a),_a=e(a,"P",{});var ap=p(_a);Sl=i(ap,"See "),Es=e(ap,"A",{href:!0,rel:!0});var Vr=p(Es);xl=i(Vr,"appearance docs"),Vr.forEach(s),Cl=i(ap," for more examples."),ap.forEach(s),Ae=k(a),ba=e(a,"H2",{id:!0});var Tc=p(ba);wa=e(Tc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Xr=p(wa);Wn=e(Xr,"SPAN",{class:!0}),p(Wn).forEach(s),Xr.forEach(s),Tl=i(Tc,"Examples"),Tc.forEach(s),Se=k(a),Pa=e(a,"P",{});var sp=p(Pa);Ll=i(sp,"All demos are running in test-mode, any of Stripe’s "),_s=e(sp,"A",{href:!0,rel:!0});var Zr=p(_s);Il=i(Zr,"test card numbers"),Zr.forEach(s),jl=i(sp," will work."),sp.forEach(s),xe=k(a),f=e(a,"UL",{});var m=p(f);Gn=e(m,"LI",{});var ai=p(Gn);Ks=e(ai,"A",{href:!0});var si=p(Ks);ql=i(si,"Payment Element"),si.forEach(s),ai.forEach(s),Dl=k(m),Bn=e(m,"LI",{});var ni=p(Bn);Ws=e(ni,"A",{href:!0});var ti=p(Ws);Rl=i(ti,"Express Checkout"),ti.forEach(s),ni.forEach(s),Hl=k(m),Un=e(m,"LI",{});var ei=p(Un);Gs=e(ei,"A",{href:!0});var pi=p(Gs);Ml=i(pi,"Embedded Checkout"),pi.forEach(s),ei.forEach(s),Ol=k(m),Yn=e(m,"LI",{});var oi=p(Yn);Bs=e(oi,"A",{href:!0});var li=p(Bs);Nl=i(li,"Credit Card"),li.forEach(s),oi.forEach(s),gl=k(m),$n=e(m,"LI",{});var ci=p($n);Us=e(ci,"A",{href:!0});var ri=p(Us);Kl=i(ri,"Apple Pay"),ri.forEach(s),ci.forEach(s),Wl=k(m),zn=e(m,"LI",{});var ii=p(zn);Ys=e(ii,"A",{href:!0});var ui=p(Ys);Gl=i(ui,"Google Pay"),ui.forEach(s),ii.forEach(s),Bl=k(m),Fn=e(m,"LI",{});var ki=p(Fn);$s=e(ki,"A",{href:!0});var fi=p($s);Ul=i(fi,"Microsoft Pay"),fi.forEach(s),ki.forEach(s),Yl=k(m),Jn=e(m,"LI",{});var mi=p(Jn);zs=e(mi,"A",{href:!0});var di=p(zs);$l=i(di,"SEPA"),di.forEach(s),mi.forEach(s),zl=k(m),Qn=e(m,"LI",{});var hi=p(Qn);Fs=e(hi,"A",{href:!0});var yi=p(Fs);Fl=i(yi,"iDEAL"),yi.forEach(s),hi.forEach(s),Jl=k(m),Vn=e(m,"LI",{});var vi=p(Vn);Js=e(vi,"A",{href:!0});var Ei=p(Js);Ql=i(Ei,"Alipay"),Ei.forEach(s),vi.forEach(s),Vl=k(m),Xn=e(m,"LI",{});var _i=p(Xn);Qs=e(_i,"A",{href:!0});var bi=p(Qs);Xl=i(bi,"WeChat Pay"),bi.forEach(s),_i.forEach(s),Zl=k(m),Zn=e(m,"LI",{});var wi=p(Zn);Vs=e(wi,"A",{href:!0});var Pi=p(Vs);ac=i(Pi,"Konbini"),Pi.forEach(s),wi.forEach(s),sc=k(m),at=e(m,"LI",{});var Ai=p(at);Xs=e(Ai,"A",{href:!0});var Si=p(Xs);nc=i(Si,"Klarna"),Si.forEach(s),Ai.forEach(s),tc=k(m),st=e(m,"LI",{});var xi=p(st);Zs=e(xi,"A",{href:!0});var Ci=p(Zs);ec=i(Ci,"Sofort"),Ci.forEach(s),xi.forEach(s),pc=k(m),nt=e(m,"LI",{});var Ti=p(nt);an=e(Ti,"A",{href:!0});var Li=p(an);oc=i(Li,"Afterpay/Clearpay"),Li.forEach(s),Ti.forEach(s),lc=k(m),tt=e(m,"LI",{});var Ii=p(tt);sn=e(Ii,"A",{href:!0});var ji=p(sn);cc=i(ji,"PaymentMethodMessaging"),ji.forEach(s),Ii.forEach(s),m.forEach(s),Ce=k(a),Aa=e(a,"H2",{id:!0});var Lc=p(Aa);Sa=e(Lc,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var qi=p(Sa);et=e(qi,"SPAN",{class:!0}),p(et).forEach(s),qi.forEach(s),rc=i(Lc,"Sponsors"),Lc.forEach(s),Te=k(a),nn=e(a,"P",{});var Di=p(nn);ic=i(Di,"This project is made possible by:"),Di.forEach(s),Le=k(a),bs=e(a,"A",{href:!0});var Ri=p(bs);ws=e(Ri,"IMG",{src:!0,width:!0,alt:!0}),Ri.forEach(s),this.h()},h(){document.title="svelte-stripe",o(b,"name","keywords"),o(b,"content","svelte,stripe,credit,debit,card,payment,applepay,googlepay,sepa,ideal"),o(Ps,"name","description"),o(Ps,"content","Everything you need to access Stripe payments with Svelte"),o(pn,"class","icon icon-link"),o(P,"aria-hidden","true"),o(P,"tabindex","-1"),o(P,"href","#svelte-stripe"),o(w,"id","svelte-stripe"),o(Ta,"href","https://stripe.com/en-gb-us/payments/elements"),o(Ta,"rel","nofollow"),o(La,"href","https://svelte.dev"),o(La,"rel","nofollow"),o(Ia,"href","https://kit.svelte.dev"),o(Ia,"rel","nofollow"),o(ja,"href","https://npmjs.org/package/svelte-stripe"),o(ja,"rel","nofollow"),o(qa,"href","https://github.com/joshnuss/svelte-stripe"),o(qa,"rel","nofollow"),o(Da,"href","https://github.com/joshnuss/svelte-stripe/blob/main/CHANGELOG.md"),o(Da,"rel","nofollow"),o(Ra,"href","https://github.com/joshnuss/svelte-stripe/blob/main/LICENSE"),o(Ra,"rel","nofollow"),o(on,"class","icon icon-link"),o(S,"aria-hidden","true"),o(S,"tabindex","-1"),o(S,"href","#installation"),o(A,"id","installation"),o(Ha,"class","language-bash"),o(Ma,"href","https://npmjs.org/package/stripe"),o(Ma,"rel","nofollow"),o(Oa,"href","https://npmjs.org/package/svelte-stripe"),o(Oa,"rel","nofollow"),o(ln,"class","icon icon-link"),o(T,"aria-hidden","true"),o(T,"tabindex","-1"),o(T,"href","#docs"),o(C,"id","docs"),o(cn,"class","icon icon-link"),o(I,"aria-hidden","true"),o(I,"tabindex","-1"),o(I,"href","#set-up-stripe"),o(L,"id","set-up-stripe"),o(Na,"class","language-bash"),o(ga,"class","language-html"),o(un,"class","icon icon-link"),o(D,"aria-hidden","true"),o(D,"tabindex","-1"),o(D,"href","#creating-a-payment-intent"),o(q,"id","creating-a-payment-intent"),o(Ka,"href","https://stripe.com/docs/api/payment_intents"),o(Ka,"rel","nofollow"),o(Wa,"class","language-javascript"),o(fn,"class","icon icon-link"),o(O,"aria-hidden","true"),o(O,"tabindex","-1"),o(O,"href","#accepting-payments"),o(M,"id","accepting-payments"),o(mn,"class","icon icon-link"),o(g,"aria-hidden","true"),o(g,"tabindex","-1"),o(g,"href","#payment-element"),o(N,"id","payment-element"),o(Ga,"class","language-html"),o(Ba,"class","language-javascript"),o(Ya,"href","https://stripe.com/docs/js/payment_intents/confirm_payment"),o(Ya,"rel","nofollow"),o($a,"class","language-javascript"),o(za,"href","https://github.com/joshnuss/svelte-stripe/tree/main/src/routes/examples/payment-element"),o(za,"rel","nofollow"),o(Is,"href","/examples/payment-element"),o(vn,"class","icon icon-link"),o(U,"aria-hidden","true"),o(U,"tabindex","-1"),o(U,"href","#link-authentication"),o(B,"id","link-authentication"),o(Fa,"href","https://link.co"),o(Fa,"rel","nofollow"),o(Ja,"class","language-html"),o(Qa,"href","https://github.com/joshnuss/svelte-stripe/tree/main/src/routes/examples/payment-element"),o(Qa,"rel","nofollow"),o(qs,"href","/examples/payment-element"),o(_n,"class","icon icon-link"),o(J,"aria-hidden","true"),o(J,"tabindex","-1"),o(J,"href","#credit-cards"),o(F,"id","credit-cards"),o(Va,"class","language-html"),o(Xa,"href","https://stripe.com/docs/js/payment_intents/confirm_card_payment"),o(Xa,"rel","nofollow"),o(Za,"class","language-javascript"),o(as,"href","https://github.com/joshnuss/svelte-stripe/tree/main/src/routes/examples/credit-card"),o(as,"rel","nofollow"),o(Ds,"href","/examples/credit-card"),o(xn,"class","icon icon-link"),o(X,"aria-hidden","true"),o(X,"tabindex","-1"),o(X,"href","#googlepay--applepay"),o(V,"id","googlepay--applepay"),o(ss,"class","language-html"),o(ns,"class","language-javascript"),o(ts,"class","language-javascript"),o(es,"href","https://github.com/joshnuss/svelte-stripe/tree/main/src/routes/examples/payment-request"),o(es,"rel","nofollow"),o(Rs,"href","/examples/payment-request"),o(In,"class","icon icon-link"),o(ea,"aria-hidden","true"),o(ea,"tabindex","-1"),o(ea,"href","#sepa"),o(ta,"id","sepa"),o(ps,"class","language-html"),o(os,"href","https://stripe.com/docs/js/payment_intents/confirm_sepa_debit_payment"),o(os,"rel","nofollow"),o(ls,"class","language-javascript"),o(cs,"href","https://github.com/joshnuss/svelte-stripe/tree/main/src/routes/examples/sepa"),o(cs,"rel","nofollow"),o(Hs,"href","/examples/sepa"),o(Dn,"class","icon icon-link"),o(ra,"aria-hidden","true"),o(ra,"tabindex","-1"),o(ra,"href","#ideal"),o(ca,"id","ideal"),o(rs,"class","language-html"),o(is,"href","https://stripe.com/docs/js/payment_intents/confirm_ideal_payment"),o(is,"rel","nofollow"),o(us,"class","language-javascript"),o(ks,"href","https://github.com/joshnuss/svelte-stripe/tree/main/src/routes/examples/ideal"),o(ks,"rel","nofollow"),o(Ms,"href","/examples/ideal"),o(On,"class","icon icon-link"),o(fa,"aria-hidden","true"),o(fa,"tabindex","-1"),o(fa,"href","#webhooks"),o(ka,"id","webhooks"),o(fs,"class","language-javascript"),o(ms,"href","https://github.com/joshnuss/svelte-stripe/tree/main/src/routes/examples/credit-card/webhooks.js"),o(ms,"rel","nofollow"),o(ds,"href","https://stripe.com/docs/stripe-cli"),o(ds,"rel","nofollow"),o(hs,"class","language-bash"),o(ys,"href","https://stripe.com/docs/webhooks"),o(ys,"rel","nofollow"),o(gn,"class","icon icon-link"),o(va,"aria-hidden","true"),o(va,"tabindex","-1"),o(va,"href","#styling"),o(ya,"id","styling"),o(vs,"class","language-html"),o(Es,"href","https://stripe.com/docs/elements/appearance-api"),o(Es,"rel","nofollow"),o(Wn,"class","icon icon-link"),o(wa,"aria-hidden","true"),o(wa,"tabindex","-1"),o(wa,"href","#examples"),o(ba,"id","examples"),o(_s,"href","https://stripe.com/docs/testing#cards"),o(_s,"rel","nofollow"),o(Ks,"href","/examples/payment-element"),o(Ws,"href","/examples/express-checkout"),o(Gs,"href","/examples/embedded-checkout"),o(Bs,"href","/examples/credit-card"),o(Us,"href","/examples/payment-request"),o(Ys,"href","/examples/payment-request"),o($s,"href","/examples/payment-request"),o(zs,"href","/examples/sepa"),o(Fs,"href","/examples/ideal"),o(Js,"href","/examples/alipay"),o(Qs,"href","/examples/wechat-pay"),o(Vs,"href","/examples/konbini"),o(Xs,"href","/examples/klarna"),o(Zs,"href","/examples/sofort"),o(an,"href","/examples/afterpay-clearpay"),o(sn,"href","/examples/payment-method-messaging"),o(et,"class","icon icon-link"),o(Sa,"aria-hidden","true"),o(Sa,"tabindex","-1"),o(Sa,"href","#sponsors"),o(Aa,"id","sponsors"),xu(ws.src,jc="/logos/stripe.svg")||o(ws,"src",jc),o(ws,"width","250"),o(ws,"alt","Stripe's logo"),o(bs,"href","https://stripe.com")},m(a,l){n(document.head,b),n(document.head,Ps),c(a,pt,l),c(a,w,l),n(w,P),n(P,pn),n(w,np),c(a,ot,l),c(a,h,l),n(h,tp),n(h,Ta),n(Ta,ep),n(h,pp),n(h,La),n(La,op),n(h,lp),n(h,Ia),n(Ia,cp),n(h,rp),c(a,lt,l),c(a,d,l),n(d,ip),n(d,ja),n(ja,up),n(d,kp),n(d,qa),n(qa,fp),n(d,mp),n(d,Da),n(Da,dp),n(d,hp),n(d,Ra),n(Ra,yp),c(a,ct,l),c(a,A,l),n(A,S),n(S,on),n(A,vp),c(a,rt,l),c(a,As,l),n(As,Ep),c(a,it,l),c(a,Ha,l),Ha.innerHTML=Mi,c(a,ut,l),c(a,x,l),n(x,Ss),n(Ss,Ma),n(Ma,_p),n(Ss,bp),n(x,wp),n(x,xs),n(xs,Oa),n(Oa,Pp),n(xs,Ap),c(a,kt,l),c(a,C,l),n(C,T),n(T,ln),n(C,Sp),c(a,ft,l),c(a,L,l),n(L,I),n(I,cn),n(L,xp),c(a,mt,l),c(a,Cs,l),n(Cs,Cp),c(a,dt,l),c(a,Na,l),Na.innerHTML=Oi,c(a,ht,l),c(a,j,l),n(j,Tp),n(j,rn),n(rn,Lp),n(j,Ip),c(a,yt,l),c(a,ga,l),ga.innerHTML=Ni,c(a,vt,l),c(a,q,l),n(q,D),n(D,un),n(q,jp),c(a,Et,l),c(a,R,l),n(R,qp),n(R,Ka),n(Ka,Dp),n(R,Rp),c(a,_t,l),c(a,H,l),n(H,Hp),n(H,kn),n(kn,Mp),n(H,Op),c(a,bt,l),c(a,Wa,l),Wa.innerHTML=gi,c(a,wt,l),c(a,M,l),n(M,O),n(O,fn),n(M,Np),c(a,Pt,l),c(a,Ts,l),n(Ts,gp),c(a,At,l),c(a,N,l),n(N,g),n(g,mn),n(N,Kp),c(a,St,l),c(a,Ls,l),n(Ls,Wp),c(a,xt,l),c(a,K,l),n(K,Gp),n(K,dn),n(dn,Bp),n(K,Up),c(a,Ct,l),c(a,Ga,l),Ga.innerHTML=Ki,c(a,Tt,l),c(a,W,l),n(W,Yp),n(W,hn),n(hn,$p),n(W,zp),c(a,Lt,l),c(a,Ba,l),Ba.innerHTML=Wi,c(a,It,l),c(a,Ua,l),n(Ua,Fp),n(Ua,Ya),n(Ya,yn),n(yn,Jp),c(a,jt,l),c(a,$a,l),$a.innerHTML=Gi,c(a,qt,l),c(a,G,l),n(G,za),n(za,Qp),n(G,Vp),n(G,Is),n(Is,Xp),c(a,Dt,l),c(a,B,l),n(B,U),n(U,vn),n(B,Zp),c(a,Rt,l),c(a,Y,l),n(Y,ao),n(Y,Fa),n(Fa,so),n(Y,no),c(a,Ht,l),c(a,js,l),n(js,to),c(a,Mt,l),c(a,$,l),n($,eo),n($,En),n(En,po),n($,oo),c(a,Ot,l),c(a,Ja,l),Ja.innerHTML=Bi,c(a,Nt,l),c(a,z,l),n(z,Qa),n(Qa,lo),n(z,co),n(z,qs),n(qs,ro),c(a,gt,l),c(a,F,l),n(F,J),n(J,_n),n(F,io),c(a,Kt,l),c(a,y,l),n(y,uo),n(y,bn),n(bn,ko),n(y,fo),n(y,wn),n(wn,mo),n(y,ho),n(y,Pn),n(Pn,yo),n(y,vo),c(a,Wt,l),c(a,Va,l),Va.innerHTML=Ui,c(a,Gt,l),c(a,v,l),n(v,Eo),n(v,An),n(An,_o),n(v,bo),n(v,Xa),n(Xa,Sn),n(Sn,wo),n(v,Po),c(a,Bt,l),c(a,Za,l),Za.innerHTML=Yi,c(a,Ut,l),c(a,Q,l),n(Q,as),n(as,Ao),n(Q,So),n(Q,Ds),n(Ds,xo),c(a,Yt,l),c(a,V,l),n(V,X),n(X,xn),n(V,Co),c(a,$t,l),c(a,Z,l),n(Z,To),n(Z,Cn),n(Cn,Lo),n(Z,Io),c(a,zt,l),c(a,ss,l),ss.innerHTML=$i,c(a,Ft,l),c(a,aa,l),n(aa,jo),n(aa,Tn),n(Tn,qo),n(aa,Do),c(a,Jt,l),c(a,ns,l),ns.innerHTML=zi,c(a,Qt,l),c(a,sa,l),n(sa,Ro),n(sa,Ln),n(Ln,Ho),n(sa,Mo),c(a,Vt,l),c(a,ts,l),ts.innerHTML=Fi,c(a,Xt,l),c(a,na,l),n(na,es),n(es,Oo),n(na,No),n(na,Rs),n(Rs,go),c(a,Zt,l),c(a,ta,l),n(ta,ea),n(ea,In),n(ta,Ko),c(a,ae,l),c(a,pa,l),n(pa,Wo),n(pa,jn),n(jn,Go),n(pa,Bo),c(a,se,l),c(a,ps,l),ps.innerHTML=Ji,c(a,ne,l),c(a,oa,l),n(oa,Uo),n(oa,os),n(os,qn),n(qn,Yo),n(oa,$o),c(a,te,l),c(a,ls,l),ls.innerHTML=Qi,c(a,ee,l),c(a,la,l),n(la,cs),n(cs,zo),n(la,Fo),n(la,Hs),n(Hs,Jo),c(a,pe,l),c(a,ca,l),n(ca,ra),n(ra,Dn),n(ca,Qo),c(a,oe,l),c(a,ia,l),n(ia,Vo),n(ia,Rn),n(Rn,Xo),n(ia,Zo),c(a,le,l),c(a,rs,l),rs.innerHTML=Vi,c(a,ce,l),c(a,E,l),n(E,al),n(E,is),n(is,Hn),n(Hn,sl),n(E,nl),n(E,Mn),n(Mn,tl),n(E,el),c(a,re,l),c(a,us,l),us.innerHTML=Xi,c(a,ie,l),c(a,ua,l),n(ua,ks),n(ks,pl),n(ua,ol),n(ua,Ms),n(Ms,ll),c(a,ue,l),c(a,ka,l),n(ka,fa),n(fa,On),n(ka,cl),c(a,ke,l),c(a,Os,l),n(Os,rl),c(a,fe,l),c(a,Ns,l),n(Ns,il),c(a,me,l),c(a,ma,l),n(ma,ul),n(ma,Nn),n(Nn,kl),n(ma,fl),c(a,de,l),c(a,fs,l),fs.innerHTML=Zi,c(a,he,l),c(a,gs,l),n(gs,ms),n(ms,ml),c(a,ye,l),c(a,da,l),n(da,dl),n(da,ds),n(ds,hl),n(da,yl),c(a,ve,l),c(a,hs,l),hs.innerHTML=au,c(a,Ee,l),c(a,ha,l),n(ha,vl),n(ha,ys),n(ys,El),n(ha,_l),c(a,_e,l),c(a,ya,l),n(ya,va),n(va,gn),n(ya,bl),c(a,be,l),c(a,Ea,l),n(Ea,wl),n(Ea,Kn),n(Kn,Pl),n(Ea,Al),c(a,we,l),c(a,vs,l),vs.innerHTML=su,c(a,Pe,l),c(a,_a,l),n(_a,Sl),n(_a,Es),n(Es,xl),n(_a,Cl),c(a,Ae,l),c(a,ba,l),n(ba,wa),n(wa,Wn),n(ba,Tl),c(a,Se,l),c(a,Pa,l),n(Pa,Ll),n(Pa,_s),n(_s,Il),n(Pa,jl),c(a,xe,l),c(a,f,l),n(f,Gn),n(Gn,Ks),n(Ks,ql),n(f,Dl),n(f,Bn),n(Bn,Ws),n(Ws,Rl),n(f,Hl),n(f,Un),n(Un,Gs),n(Gs,Ml),n(f,Ol),n(f,Yn),n(Yn,Bs),n(Bs,Nl),n(f,gl),n(f,$n),n($n,Us),n(Us,Kl),n(f,Wl),n(f,zn),n(zn,Ys),n(Ys,Gl),n(f,Bl),n(f,Fn),n(Fn,$s),n($s,Ul),n(f,Yl),n(f,Jn),n(Jn,zs),n(zs,$l),n(f,zl),n(f,Qn),n(Qn,Fs),n(Fs,Fl),n(f,Jl),n(f,Vn),n(Vn,Js),n(Js,Ql),n(f,Vl),n(f,Xn),n(Xn,Qs),n(Qs,Xl),n(f,Zl),n(f,Zn),n(Zn,Vs),n(Vs,ac),n(f,sc),n(f,at),n(at,Xs),n(Xs,nc),n(f,tc),n(f,st),n(st,Zs),n(Zs,ec),n(f,pc),n(f,nt),n(nt,an),n(an,oc),n(f,lc),n(f,tt),n(tt,sn),n(sn,cc),c(a,Ce,l),c(a,Aa,l),n(Aa,Sa),n(Sa,et),n(Aa,rc),c(a,Te,l),c(a,nn,l),n(nn,ic),c(a,Le,l),c(a,bs,l),n(bs,ws)},p:Ic,i:Ic,o:Ic,d(a){s(b),s(Ps),a&&s(pt),a&&s(w),a&&s(ot),a&&s(h),a&&s(lt),a&&s(d),a&&s(ct),a&&s(A),a&&s(rt),a&&s(As),a&&s(it),a&&s(Ha),a&&s(ut),a&&s(x),a&&s(kt),a&&s(C),a&&s(ft),a&&s(L),a&&s(mt),a&&s(Cs),a&&s(dt),a&&s(Na),a&&s(ht),a&&s(j),a&&s(yt),a&&s(ga),a&&s(vt),a&&s(q),a&&s(Et),a&&s(R),a&&s(_t),a&&s(H),a&&s(bt),a&&s(Wa),a&&s(wt),a&&s(M),a&&s(Pt),a&&s(Ts),a&&s(At),a&&s(N),a&&s(St),a&&s(Ls),a&&s(xt),a&&s(K),a&&s(Ct),a&&s(Ga),a&&s(Tt),a&&s(W),a&&s(Lt),a&&s(Ba),a&&s(It),a&&s(Ua),a&&s(jt),a&&s($a),a&&s(qt),a&&s(G),a&&s(Dt),a&&s(B),a&&s(Rt),a&&s(Y),a&&s(Ht),a&&s(js),a&&s(Mt),a&&s($),a&&s(Ot),a&&s(Ja),a&&s(Nt),a&&s(z),a&&s(gt),a&&s(F),a&&s(Kt),a&&s(y),a&&s(Wt),a&&s(Va),a&&s(Gt),a&&s(v),a&&s(Bt),a&&s(Za),a&&s(Ut),a&&s(Q),a&&s(Yt),a&&s(V),a&&s($t),a&&s(Z),a&&s(zt),a&&s(ss),a&&s(Ft),a&&s(aa),a&&s(Jt),a&&s(ns),a&&s(Qt),a&&s(sa),a&&s(Vt),a&&s(ts),a&&s(Xt),a&&s(na),a&&s(Zt),a&&s(ta),a&&s(ae),a&&s(pa),a&&s(se),a&&s(ps),a&&s(ne),a&&s(oa),a&&s(te),a&&s(ls),a&&s(ee),a&&s(la),a&&s(pe),a&&s(ca),a&&s(oe),a&&s(ia),a&&s(le),a&&s(rs),a&&s(ce),a&&s(E),a&&s(re),a&&s(us),a&&s(ie),a&&s(ua),a&&s(ue),a&&s(ka),a&&s(ke),a&&s(Os),a&&s(fe),a&&s(Ns),a&&s(me),a&&s(ma),a&&s(de),a&&s(fs),a&&s(he),a&&s(gs),a&&s(ye),a&&s(da),a&&s(ve),a&&s(hs),a&&s(Ee),a&&s(ha),a&&s(_e),a&&s(ya),a&&s(be),a&&s(Ea),a&&s(we),a&&s(vs),a&&s(Pe),a&&s(_a),a&&s(Ae),a&&s(ba),a&&s(Se),a&&s(Pa),a&&s(xe),a&&s(f),a&&s(Ce),a&&s(Aa),a&&s(Te),a&&s(nn),a&&s(Le),a&&s(bs)}}}class Lu extends wu{constructor(b){super(),Pu(this,b,null,Cu,Au,{})}}export{Lu as component};
